<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-p2SRgsDW1JbF2GsvHDv5z5fCrDsfX+xJeR02LfZwP4KjbJ4CpZ5p1azSfzM11tEJv54pN6p6LEIoMRkgSpXahQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .today {
            background-color: #3b82f6; /* Tailwind's blue-500 */
            color: white;
        }
    </style>
</head>
<body class="m-0 p-0 font-sans bg-gray-100 flex h-screen">
    
    <!-- Right Sidebar -->
    <aside class="w-70 p-5 space-y-5 bg-white shadow-lg">
        
        <!-- Calendar Widget -->
        <div class="bg-gray-100 p-4 rounded-lg shadow-inner">
            <h2 class="text-lg font-bold">Calendar</h2>
            <div class="space-y-2">
                <div class="flex justify-between items-center font-bold">
                    <span id="currentMonth"></span>
                    <span class="flex space-x-1">
                        <span id="prevMonth" class="material-symbols-outlined cursor-pointer">chevron_left</span>
                        <span id="nextMonth" class="material-symbols-outlined cursor-pointer">chevron_right</span>
                    </span>
                </div>
                
                <!-- Weekdays Header -->
                <div class="grid grid-cols-7 text-center font-bold">
                    <div>Sun</div>
                    <div>Mon</div>
                    <div>Tue</div>
                    <div>Wed</div>
                    <div>Thu</div>
                    <div>Fri</div>
                    <div>Sat</div>
                </div>
                
                <div class="grid grid-cols-7 gap-2" id="calendarDays">
                    <!-- Days will be populated here -->
                </div>
            </div>
        </div>
    </aside>

    <script>
        const calendarDays = document.getElementById("calendarDays");
        const currentMonth = document.getElementById("currentMonth");
        const prevMonth = document.getElementById("prevMonth");
        const nextMonth = document.getElementById("nextMonth");

        let currentDate = new Date();
        
        function renderCalendar(date) {
            // Get the first day of the month and number of days in the month
            const year = date.getFullYear();
            const month = date.getMonth();
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const totalDays = lastDay.getDate();

            // Update the current month display
            currentMonth.textContent = `${firstDay.toLocaleString('default', { month: 'long' })} ${year}`;

            // Clear the existing calendar
            calendarDays.innerHTML = '';

            // Get the day of the week the first day of the month falls on
            const startDay = firstDay.getDay();

            // Fill in the empty days before the first of the month
            for (let i = 0; i < startDay; i++) {
                calendarDays.innerHTML += `<div class="flex justify-center items-center p-2"></div>`;
            }

            // Fill in the days of the month
            for (let i = 1; i <= totalDays; i++) {
                const dayElement = document.createElement('div');
                dayElement.classList.add('flex', 'justify-center', 'items-center', 'p-2', 'bg-white', 'rounded-lg', 'shadow', 'cursor-pointer', 'hover:bg-blue-100');

                // Highlight today's date
                if (i === currentDate.getDate() && month === currentDate.getMonth() && year === currentDate.getFullYear()) {
                    dayElement.classList.add('today');
                }

                dayElement.textContent = i;
                calendarDays.appendChild(dayElement);
            }
        }

        // Previous and next month navigation
        prevMonth.addEventListener("click", () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar(currentDate);
        });

        nextMonth.addEventListener("click", () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar(currentDate);
        });

        // Function to update today's date highlight
        function updateTodayHighlight() {
            const newDate = new Date();
            if (newDate.getDate() !== currentDate.getDate() || newDate.getMonth() !== currentDate.getMonth() || newDate.getFullYear() !== currentDate.getFullYear()) {
                currentDate = newDate;
                renderCalendar(currentDate);
            }
        }

        // Initial render
        renderCalendar(currentDate);
        
        // Update the highlight every minute
        setInterval(updateTodayHighlight, 60000);
    </script>
</body>
</html>
