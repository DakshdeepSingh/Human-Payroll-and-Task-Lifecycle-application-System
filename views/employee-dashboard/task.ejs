<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Dashboard - Task</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-p2SRgsDW1JbF2GsvHDv5z5fCrDsfX+xJeR02LfZwP4KjbJ4CpZ5p1azSfzM11tEJv54pN6p6LEIoMRkgSpXahQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Additional styles for task page */
        .task-card {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            margin: 10px 0;
            background-color: #f9fafb;
            border-left: 4px solid #4f46e5;
            border-radius: 5px;
        }

        .task-card .task-info {
            flex-grow: 1;
            padding-left: 10px;
        }

        .task-card .task-actions {
            display: flex;
            gap: 10px;
        }

        .task-card.done .task-info p {
            text-decoration: line-through;
        }
    </style>
</head>

<body class="m-0 p-0 font-sans bg-gray-100 flex h-screen">
    <div class="flex w-full">
        <!-- Leftbar -->
        <%- include('../employee/left-bar') %>

        <!-- Main content for tasks -->
        <main class="flex-1 p-5 space-y-5">
            <h1 class="text-2xl font-bold mb-5">Task Management</h1>

            <!-- Task List -->
            <div id="taskList" class="bg-white p-5 rounded-lg shadow-lg space-y-4">
                <h3 class="text-lg font-bold">Tasks</h3>

                <!-- Example Task Item 1 -->
                <div class="task-card" data-task-id="1">
                    <div class="task-info">
                        <p class="font-bold">Complete Payroll for September</p>
                        <p class="text-gray-500">Due: 30th Sep</p>
                    </div>
                    <div class="task-actions">
                        <button class="bg-indigo-600 text-white px-3 py-1 rounded mark-as-done">Mark as Done</button>
                        <button class="bg-red-600 text-white px-3 py-1 rounded delete-task">Delete</button>
                    </div>
                </div>

                <!-- Task items will be dynamically added here -->
            </div>

            <!-- Add New Task Form -->
            <div class="bg-white p-5 rounded-lg shadow-lg space-y-4">
                <h3 class="text-lg font-bold">Add New Task</h3>
                <form id="addTaskForm" class="space-y-4">
                    <div class="flex flex-col">
                        <label for="taskName" class="font-bold">Task Name:</label>
                        <input type="text" id="taskName" name="taskName"
                            class="border rounded p-2 mt-1 focus:outline-none focus:ring focus:border-indigo-500">
                    </div>

                    <div class="flex flex-col">
                        <label for="taskDueDate" class="font-bold">Due Date:</label>
                        <input type="date" id="taskDueDate" name="taskDueDate"
                            class="border rounded p-2 mt-1 focus:outline-none focus:ring focus:border-indigo-500">
                    </div>

                    <button type="button" id="addTaskButton"
                        class="bg-indigo-600 text-white px-4 py-2 rounded-lg mt-auto">
                        Add Task
                    </button>
                </form>
            </div>

        </main>

        <!-- Rightbar -->
        <%- include('../employee/right-bar') %>
    </div>

    <script>
        // Handle "Mark as Done" and "Delete" actions
        function handleTaskActions(taskElement) {
            const markAsDoneButton = taskElement.querySelector('.mark-as-done');
            const deleteButton = taskElement.querySelector('.delete-task');

            markAsDoneButton.addEventListener('click', () => {
                taskElement.classList.toggle('done');
                markAsDoneButton.textContent = taskElement.classList.contains('done') ? 'Done' : 'Mark as Done';
                markAsDoneButton.classList.toggle('bg-green-500');
                markAsDoneButton.classList.toggle('bg-indigo-600');
            });

            deleteButton.addEventListener('click', () => {
                taskElement.remove();
            });
        }

        // Dynamically add tasks
        document.getElementById('addTaskButton').addEventListener('click', () => {
            const taskName = document.getElementById('taskName').value;
            const taskDueDate = document.getElementById('taskDueDate').value;

            if (taskName && taskDueDate) {
                const taskList = document.getElementById('taskList');

                // Create a new task card
                const newTask = document.createElement('div');
                newTask.classList.add('task-card');
                newTask.innerHTML = `
                    <div class="task-info">
                        <p class="font-bold">${taskName}</p>
                        <p class="text-gray-500">Due: ${taskDueDate}</p>
                    </div>
                    <div class="task-actions">
                        <button class="bg-indigo-600 text-white px-3 py-1 rounded mark-as-done">Mark as Done</button>
                        <button class="bg-red-600 text-white px-3 py-1 rounded delete-task">Delete</button>
                    </div>
                `;

                // Append the new task to the list
                taskList.appendChild(newTask);

                // Clear form inputs
                document.getElementById('taskName').value = '';
                document.getElementById('taskDueDate').value = '';

                // Add event listeners to the new task
                handleTaskActions(newTask);
            }
        });

        // Attach event listeners to the existing tasks
        document.querySelectorAll('.task-card').forEach(taskElement => {
            handleTaskActions(taskElement);
        });
    </script>
</body>

</html>
